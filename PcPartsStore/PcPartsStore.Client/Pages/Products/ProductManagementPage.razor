@page "/products"
@using PcPartsStore.Client.Services
@using Shared.Models
@inject NavigationManager Navigation
@inject IProductApiService ProductService
@inject ICategoryApiService CategoryService
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<PageTitle>Manage Products</PageTitle>

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h3>Product Management</h3>
        <button @onclick="AddNewProduct" class="btn btn-success">
            <i class="bi bi-plus-circle"></i> Add New Product
        </button>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header bg-light">
            <h5 class="m-0">Filters</h5>
        </div>
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-3">
                    <label class="form-label">Product Name</label>
                    <input type="text" @bind="filters.Name" placeholder="Search by name" class="form-control" />
                </div>
                <div class="col-md-3">
                    <label class="form-label">Category</label>
                    <select @bind="filters.Category" class="form-select">
                        <option value="">All Categories</option>
                        @foreach (var category in categories)
                        {
                            <option value="@category.Id">@category.Name</option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Min Price ($)</label>
                    <input type="number" @bind="filters.MinPrice" placeholder="Min Price" class="form-control" />
                </div>
                <div class="col-md-2">
                    <label class="form-label">Max Price ($)</label>
                    <input type="number" @bind="filters.MaxPrice" placeholder="Max Price" class="form-control" />
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button @onclick="ApplyFilters" class="btn btn-primary w-100">
                        <i class="bi bi-funnel"></i> Apply
                    </button>
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <button @onclick="ClearFilters" class="btn btn-secondary w-100">
                        <i class="bi bi-x-circle"></i> Clear Filters
                    </button>
                </div>
            </div>
        </div>
    </div>

    @if (products != null && products.Count > 0)
    {
        var groupedProducts = products.GroupBy(p => p.CategoryId);

        @foreach (var categoryGroup in groupedProducts)
        {
            var categoryName = categories.FirstOrDefault(c => c.Id == categoryGroup.Key)?.Name ?? "Uncategorized";

            <div class="category-section mb-4">
                <h4 class="category-title">@categoryName</h4>
                <div class="d-flex flex-row flex-wrap gap-3">
                    @foreach (var product in categoryGroup)
                    {
                        <div class="card h-100 shadow-sm hover-shadow product-card">
                            <div class="product-image-container text-center p-3" style="height: 200px; overflow: hidden;">
                                @if (!string.IsNullOrEmpty(product.ImageBase64))
                                {
                                    <img src="data:image/png;base64,@product.ImageBase64" class="product-image"
                                         alt="@product.Name" style="max-height: 180px; max-width: 100%; object-fit: contain;" />
                                }
                                else
                                {
                                    <div class="no-image-placeholder d-flex align-items-center justify-content-center h-100 bg-light">
                                        <i class="bi bi-image text-muted" style="font-size: 3rem;"></i>
                                    </div>
                                }
                            </div>
                            <div class="card-body">
                                <h5 class="card-title">@product.Name</h5>
                                <p class="card-text text-truncate mb-1">@product.Description</p>
                                <div class="d-flex justify-content-between align-items-center mt-3">
                                    <span class="price-tag h5 mb-0 text-primary">$@product.Price.ToString("0.00")</span>
                                    <div>
                                        <button class="btn btn-outline-primary me-2" @onclick="() => EditProduct(product.Id)">
                                            <i class="bi bi-pencil"></i> Edit
                                        </button>
                                        <button class="btn btn-outline-danger" @onclick="() => ConfirmDelete(product.Id)">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    }
    else
    {
        <div class="alert alert-info text-center p-5 mt-4">
            <i class="bi bi-info-circle" style="font-size: 2rem;"></i>
            <p class="mt-3 mb-0">No products found</p>
        </div>
    }

</div>

@if (showDeleteModal)
{
    <div class="modal fade show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Deletion</h5>
                    <button type="button" class="btn-close" @onclick="CloseDeleteModal"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete this product?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseDeleteModal">Cancel</button>
                    <button type="button" class="btn btn-danger" @onclick="DeleteProduct">Delete</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    private List<Product> products;
    private List<Category> categories = new();
    private ProductFilters filters = new ProductFilters();
    private bool showDeleteModal = false;
    private int productIdToDelete;

    protected override async Task OnInitializedAsync()
    {
        categories = await CategoryService.GetCategoriesAsync();
        products = await ProductService.GetProductsAsync(filters);
    }

    private async Task ApplyFilters()
    {
        products = await ProductService.GetProductsAsync(filters);
    }

    private void EditProduct(int productId)
    {
        Navigation.NavigateTo($"/product/edit/{productId}");
    }

    private void AddNewProduct()
    {
        Navigation.NavigateTo("/product/edit/0");
    }

    private void ConfirmDelete(int productId)
    {
        productIdToDelete = productId;
        showDeleteModal = true;
    }

    private void CloseDeleteModal()
    {
        showDeleteModal = false;
    }

    private async Task DeleteProduct()
    {
        await ProductService.DeleteProductAsync(productIdToDelete);
        products = await ProductService.GetProductsAsync(filters);
        showDeleteModal = false;
    }

    private async Task ClearFilters()
    {
        filters = new ProductFilters();
        products = await ProductService.GetProductsAsync(filters);
    }
}

<style>
    .hover-shadow:hover {
        transition: transform 0.2s, box-shadow 0.2s;
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.1) !important;
    }

    .price-tag {
        font-weight: 600;
    }

    .modal-backdrop {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1040;
    }

    .category-title {
        font-size: 1.5rem;
        font-weight: bold;
        margin-bottom: 10px;
        padding-left: 5px;
        border-left: 5px solid #007bff;
    }

    .category-section {
        margin-bottom: 2rem;
    }

    .product-card {
        width: 300px;
    }
</style>