@page "/order-confirmation/{OrderId:int}"
@using Shared.Dto
@using Shared.Models
@using Shared.Services
@inject IOrderApiService OrderService
@inject SpinnerService SpinnerService
@inject NavigationManager NavigationManager
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<div class="container">
    <div class="row justify-content-center mt-5">
        <div class="col-md-8">
            @if (orderDetails == null)
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3">Loading order details...</p>
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-header bg-success text-white">
                        <div class="d-flex justify-content-between align-items-center">
                            <h3 class="mb-0">Order Confirmed!</h3>
                            <div>Order #@orderDetails.Id</div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="text-center mb-4">
                            <i class="bi bi-check-circle-fill text-success" style="font-size: 4rem;"></i>
                            <h4 class="mt-3">Thank you for your order</h4>
                            <p class="text-muted">Order Date: @orderDetails.OrderDate.ToString("MMMM dd, yyyy HH:mm")</p>
                        </div>

                        <h5>Order Items</h5>
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Price</th>
                                        <th>Quantity</th>
                                        <th class="text-end">Subtotal</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in orderDetails.OrderItems)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @if (!string.IsNullOrEmpty(item.ProductImage))
                                                    {
                                                        <img src="data:image/jpeg;base64,@item.ProductImage" 
                                                             class="img-thumbnail me-3" 
                                                             style="width: 50px; height: 50px; object-fit: cover;" 
                                                             alt="@item.ProductName">
                                                    }
                                                    <span>@item.ProductName</span>
                                                </div>
                                            </td>
                                            <td>@item.ProductPrice.ToString("C")</td>
                                            <td>@item.Quantity</td>
                                            <td class="text-end">@item.Subtotal.ToString("C")</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <tr>
                                        <th colspan="3" class="text-end">Total:</th>
                                        <th class="text-end">@orderDetails.TotalAmount.ToString("C")</th>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                    <div class="card-footer">
                        <div class="d-flex justify-content-between">
                            <button class="btn btn-primary" @onclick="NavigateToOrders">
                                View My Orders
                            </button>
                            <button class="btn btn-outline-primary" @onclick="NavigateToProducts">
                                Continue Shopping
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int OrderId { get; set; }

    private OrderDetailsDto orderDetails;

    protected override async Task OnInitializedAsync()
    {
        await SpinnerService.ShowSpinnerAsync();
        try
        {
            orderDetails = await OrderService.GetOrderDetailsAsync(OrderId);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading order details: {ex.Message}");
        }
        finally
        {
            await SpinnerService.HideSpinnerAsync();
        }
    }

    private void NavigateToProducts()
    {
        NavigationManager.NavigateTo("/products");
    }

    private void NavigateToOrders()
    {
        NavigationManager.NavigateTo("/my-orders");
    }
}